pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                script {
                def appJson = libraryResource 'applications.json'
                def data = readJSON text: appJson
                def appid = ""
                for ( app in data.applications ) {
                    if (app.name == appname) {
                      appid = app.id
                      break
                    }
                }
                def author_name = sh(script: "git log -n 1 ${env.GIT_COMMIT} --format=%aN", returnStdout: true).trim()
                def time = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))
                sh 'printenv'
                    def data = [
                    'revision': "${env.BUILD_ID}",
                    'changelog': "${env.JOB_NAME}",
                    'description': "${env.GIT_COMMIT}",
                    'user' : "${author_name}",
                    'timestamp' : "${time}"
                    ]
                    def deploy = [
                        'deployment': data
                        ]
                    def test = writeJSON returnText: true, json: data
                    echo "${test}"
                 def url= "asdasdsad${appid}"
                 // continue the pipeline
                }
            }
        }
    }
}
